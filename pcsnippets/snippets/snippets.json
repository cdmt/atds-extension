{
  "Type Mini": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t12",
    "body": ["<TypeMini as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeMini>"],
    "description": "Shortcut for Type Mini"
  },
  "Type Prius": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t14Uppercase",
    "body": ["<TypePrius as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypePrius>"],
    "description": "Shortcut for Type Prius"
  },
  "Type Smart": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t14",
    "body": ["<TypeSmart as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeSmart>"],
    "description": "Shortcut for Type Smart"
  },
  "Type Fiesta": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t16",
    "body": ["<TypeFiesta as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeFiesta>"],
    "description": "Shortcut for Type Fiesta"
  },
  "Type Picanto": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t16Uppercase",
    "body": [
      "<TypePicanto as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypePicanto>"
    ],
    "description": "Shortcut for Type Picanto"
  },
  "Type Beetle": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t18",
    "body": [
      "<TypeTypeBeetle as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeTypeBeetle>"
    ],
    "description": "Shortcut for Type Beetle"
  },
  "Type Toledo": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t20",
    "body": ["<TypeToledo as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeToledo>"],
    "description": "Shortcut for Type Toledo"
  },
  "Type Insignia": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t26",
    "body": [
      "<TypeInsignia as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeInsignia>"
    ],
    "description": "Shortcut for Type Insignia"
  },
  "Type Phantom": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t32",
    "body": [
      "<TypePhantom as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypePhantom>"
    ],
    "description": "Shortcut for Type Phantom"
  },
  "Type Discovery": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t40",
    "body": [
      "<TypeDiscovery as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeDiscovery>"
    ],
    "description": "Shortcut for Type Discovery"
  },
  "Type Cherokee": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t96",
    "body": [
      "<TypeCherokee as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeCherokee>"
    ],
    "description": "Shortcut for Type Cherokee"
  },
  "Type Hummer": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "t144",
    "body": ["<TypeHummer as='${1|p,span,h1,h2,h3,h4,h5,h6|}'>$0</TypeHummer>"],
    "description": "Shortcut for Type Hummer"
  },
  "Spacing 4px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s4",
    "body": ["${({ theme }) => ThemeSelectors.getGroupOneSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 8px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s8",
    "body": ["${({ theme }) => ThemeSelectors.getGroupTwoSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 12px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s12",
    "body": ["${({ theme }) => ThemeSelectors.getGroupThreeSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 16px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s16",
    "body": ["${({ theme }) => ThemeSelectors.getGroupFourSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 20px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s20",
    "body": ["${({ theme }) => ThemeSelectors.getGroupFiveSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 24px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s24",
    "body": ["${({ theme }) => ThemeSelectors.getGroupSixSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 32px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s32",
    "body": ["${({ theme }) => ThemeSelectors.getRelatedOneSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 48px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s48",
    "body": ["${({ theme }) => ThemeSelectors.getRelatedTwoSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 64px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s64",
    "body": ["${({ theme }) => ThemeSelectors.getDistinctOneSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 72px": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s72",
    "body": ["${({ theme }) => ThemeSelectors.getDistinctTwoSpacing(theme)}"],
    "description": "create styled component DS value"
  },
  "Spacing 4px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s4Short",
    "body": ["${ThemeSelectors.getGroupOneSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 8px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s8Short",
    "body": ["${ThemeSelectors.getGroupTwoSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 12px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s12Short",
    "body": ["${ThemeSelectors.getGroupThreeSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 16px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s16Short",
    "body": ["${ThemeSelectors.getGroupFourSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 20px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s20Short",
    "body": ["${ThemeSelectors.getGroupFiveSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 24px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s24Short",
    "body": ["${ThemeSelectors.getGroupSixSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 32px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s32Short",
    "body": ["${ThemeSelectors.getRelatedOneSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 48px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s48Short",
    "body": ["${ThemeSelectors.getRelatedTwoSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 64px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s64Short",
    "body": ["${ThemeSelectors.getDistinctOneSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Spacing 72px short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "s72Short",
    "body": ["${ThemeSelectors.getDistinctTwoSpacing(theme)}$0"],
    "description": "create styled component DS value"
  },
  "Color Blue": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cBlue",
    "body": ["${({ theme }) => ThemeSelectors.getBlue(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Blue": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cBlueLight",
    "body": ["${({ theme }) => ThemeSelectors.getLightBlue(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Blue": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cBlueDark",
    "body": ["${({ theme }) => ThemeSelectors.getDarkBlue(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Red": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cRed",
    "body": ["${({ theme }) => ThemeSelectors.getRed(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Red": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cRedLight",
    "body": ["${({ theme }) => ThemeSelectors.getLightRed(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Red": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cRedDark",
    "body": ["${({ theme }) => ThemeSelectors.getDarkRed(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Green": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreen",
    "body": ["${({ theme }) => ThemeSelectors.getGreen(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Green": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreenLight",
    "body": ["${({ theme }) => ThemeSelectors.getLightGreen(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Green": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreenDark",
    "body": ["${({ theme }) => ThemeSelectors.getDarkGreen(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Yellow": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cYellow",
    "body": ["${({ theme }) => ThemeSelectors.getYellow(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Yellow": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cYellowLight",
    "body": ["${({ theme }) => ThemeSelectors.getLightYellow(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Yellow": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cYellowDark",
    "body": ["${({ theme }) => ThemeSelectors.getDarkYellow(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Grey": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGrey",
    "body": ["${({ theme }) => ThemeSelectors.getGrey(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Grey": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreyLight",
    "body": ["${({ theme }) => ThemeSelectors.getLightGrey(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Grey": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreyDark",
    "body": ["${({ theme }) => ThemeSelectors.getDarkGrey(theme)};"],
    "description": "create styled component DS value"
  },
  "Color White": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cWhite",
    "body": ["${({ theme }) => ThemeSelectors.getWhite(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Action": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cAction",
    "body": ["${({ theme }) => ThemeSelectors.getAction(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Action Active": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cActionActive",
    "body": ["${({ theme }) => ThemeSelectors.getActionActiveColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Action Hover": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cActionHover",
    "body": ["${({ theme }) => ThemeSelectors.getActionHoverColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Visited": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cVisited",
    "body": ["${({ theme }) => ThemeSelectors.getVisitedColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Focus": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cFocus",
    "body": ["${({ theme }) => ThemeSelectors.getFocusColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Graphic": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGraphic",
    "body": ["${({ theme }) => ThemeSelectors.getGraphicColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Error": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cError",
    "body": ["${({ theme }) => ThemeSelectors.getErrorColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Sucess": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cSuccess",
    "body": ["${({ theme }) => ThemeSelectors.getSuccessColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Accent": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cAccent",
    "body": ["${({ theme }) => ThemeSelectors.getAccentColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Placeholder": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cPlaceholder",
    "body": ["${({ theme }) => ThemeSelectors.getPlaceholderColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Title": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cTitle",
    "body": ["${({ theme }) => ThemeSelectors.getTitleColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Copy": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cCopy",
    "body": ["${({ theme }) => ThemeSelectors.getCopyColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Blue Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cBlueShort",
    "body": ["${ThemeSelectors.getBlue(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Blue Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cBlueLightShort",
    "body": ["${ThemeSelectors.getLightBlue(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Blue Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cBlueDarkShort",
    "body": ["${ThemeSelectors.getDarkBlue(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Red Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cRedShort",
    "body": ["${ThemeSelectors.getRed(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Red Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cRedLightShort",
    "body": ["${ThemeSelectors.getLightRed(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Red Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cRedDarkShort",
    "body": ["${ThemeSelectors.getDarkRed(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Green Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreenShort",
    "body": ["${ThemeSelectors.getGreen(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Green Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreenLightShort",
    "body": ["${ThemeSelectors.getLightGreen(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Green Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreenDarkShort",
    "body": ["${ThemeSelectors.getDarkGreen(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Yellow Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cYellowShort",
    "body": ["${ThemeSelectors.getYellow(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Yellow Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cYellowLightShort",
    "body": ["${ThemeSelectors.getLightYellow(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Yellow Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cYellowDarkShort",
    "body": ["${ThemeSelectors.getDarkYellow(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Grey Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreyShort",
    "body": ["${ThemeSelectors.getGrey(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Light Grey Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreyLightShort",
    "body": ["${ThemeSelectors.getLightGrey(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Dark Grey Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGreyDarkShort",
    "body": ["${ThemeSelectors.getDarkGrey(theme)};"],
    "description": "create styled component DS value"
  },
  "Color White Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cWhiteShort",
    "body": ["${ThemeSelectors.getWhite(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Action Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cActionShort",
    "body": ["${ThemeSelectors.getAction(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Action Active Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cActionActiveShort",
    "body": ["${ThemeSelectors.getActionActiveColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Action Hover Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cActionHoverShort",
    "body": ["${ThemeSelectors.getActionHoverColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Visited Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cVisitedShort",
    "body": ["${ThemeSelectors.getVisitedColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Focus Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cFocusShort",
    "body": ["${ThemeSelectors.getFocusColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Graphic Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cGraphicShort",
    "body": ["${ThemeSelectors.getGraphicColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Error Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cErrorShort",
    "body": ["${ThemeSelectors.getErrorColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Success Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cSuccessShort",
    "body": ["${ThemeSelectors.getSuccessColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Accent Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cAccentShort",
    "body": ["${ThemeSelectors.getAccentColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Placeholder Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cPlaceholderShort",
    "body": ["${ThemeSelectors.getPlaceholderColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Title Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cTitleShort",
    "body": ["${ThemeSelectors.getTitleColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Color Copy Short": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "cCopyShort",
    "body": ["${ThemeSelectors.getCopyColor(theme)};"],
    "description": "create styled component DS value"
  },
  "Create Styled Component": {
    "scope": "javascript, javascriptreact, typescript, typescriptreact",
    "prefix": "sc",
    "body": [
      "export const ${1:ComponentName} = styled.${2|div, section, article, span, p, header|}`",
      "\t$0",
      "`"
    ],
    "description": "create styled component DS value"
  },
  "Styled Component with Theme": {
    "prefix": "scTheme",
    "body": ["${({ theme }) => css`", "\t$0", "`}"],
    "description": "Styled Component with Theme"
  },
  "React Link with Event Handling": {
    "prefix": "scLink",
    "body": [
      "<Link",
      "  href={`#`}",
      "  routerLink={false}",
      "  onInteraction={(e: SyntheticEvent) => {",
      "    e.preventDefault();",
      "    setVisible(true);",
      "  }}",
      "  attributes={{",
      "    [dataAttrGUI]: getDataGuiPrefixedValue(\"attr-here\"),",
      "    \"aria-label\": \"helpful text here\",",
      "  }}",
      "  trackData={{",
      "    eventEntity: buildUiInteractionEntity(\"track-here\", \"click\"),",
      "  }}>",
      "  Link text here",
      "</Link>"
    ],
    "description": "React Link with Event Handling"
  }
}
